<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.example</groupId>
    <artifactId>my-app</artifactId>
    <version>1.0</version>
    <packaging>war</packaging>  <!-- WAR Packaging for Tomcat Deployment -->

    <name>Sample Java App</name>

    <properties>
        <java.version>17</java.version> <!-- Ensure Java version is set to 17 -->
        <spring-boot.version>2.7.0</spring-boot.version>  <!-- Define Spring Boot Version -->
    </properties>

    <dependencies>
        <!-- Spring Boot Web -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring-boot.version}</version>  <!-- Add Version -->
        </dependency>

        <!-- Tomcat Starter -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <version>${spring-boot.version}</version>  <!-- Add Version -->
            <scope>provided</scope>
        </dependency>

        <!-- Spring Boot Starter for Tests -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring-boot.version}</version>  <!-- Add Version -->
            <scope>test</scope>
        </dependency>

        <!-- SonarQube Scanner Plugin Dependency (Optional, if needed for analysis) -->
        <!-- This is usually handled in the Jenkins pipeline, but if you prefer to include it here, you can -->
        <!--
        <dependency>
            <groupId>org.sonarsource.scanner.maven</groupId>
            <artifactId>sonar-maven-plugin</artifactId>
            <version>4.0.0.4121</version>
        </dependency>
        -->
    </dependencies>

    <build>
        <plugins>
            <!-- Spring Boot Maven Plugin (Fixed Version Issue) -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>  <!-- Add Version -->
            </plugin>

            <!-- Maven WAR Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.2</version>
                <configuration>
                    <failOnMissingWebXml>false</failOnMissingWebXml>
                </configuration>
            </plugin>

            <!-- Maven Compiler Plugin to specify Java version -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>17</source>  <!-- Set source version to 17 -->
                    <target>17</target>  <!-- Set target version to 17 -->
                </configuration>
            </plugin>

            <!-- SonarQube Maven Plugin for analysis -->
            <plugin>
                <groupId>org.sonarsource.scanner.maven</groupId>
                <artifactId>sonar-maven-plugin</artifactId>
                <version>4.0.0.4121</version> <!-- Make sure this is compatible with Java 17 -->
            </plugin>
        </plugins>
    </build>
</project>

